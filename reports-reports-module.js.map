{"version":3,"sources":["./src/app/reports/covidpredictions/covidpredictions.component.ts","./src/app/reports/covidpredictions/covidpredictions.component.html","./src/app/reports/covidtable/covidtable.component.ts","./src/app/reports/covidtable/covidtable.component.html","./src/app/reports/reports.component.ts","./src/app/reports/reports.component.html","./src/app/reports/reports.module.ts"],"names":[],"mappings":"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","file":"reports-reports-module.js","sourcesContent":["import { ICovidData } from './../CovidData';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n@Component({\r\n  selector: 'app-covidpredictions',\r\n  templateUrl: './covidpredictions.component.html',\r\n  styleUrls: ['./covidpredictions.component.css']\r\n})\r\nexport class CovidpredictionsComponent {\r\n\r\n  displayedColumns: string[] = ['date','cases','deaths'];\r\n  dataSource:MatTableDataSource<ICovidData>;\r\n  loading:boolean =  false;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort:MatSort;\r\n\r\n  public selectedName:any;\r\n\r\n  constructor(private dataService:DataService) {\r\n    this.requestData()\r\n  }\r\n\r\n  public highlightRow(model:any) {\r\n    this.selectedName = model.date;\r\n  }\r\n\r\n  async requestData(){\r\n    this.loading = true;\r\n\r\n      var data =  await this.dataService.getPredictions().toPromise().then(res=> {\r\n        var data = res['body'];\r\n        return data;\r\n      });\r\n\r\n    var tableData = this.formatData(data);\r\n\r\n    this.dataSource = new MatTableDataSource<ICovidData>(tableData);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n    this.loading = false;\r\n  }\r\n\r\n  formatData(data:any):ICovidData[]{\r\n    var arrData:ICovidData[] = []\r\n\r\n\r\n      var cases = data['cases'];\r\n      var deaths = data['deaths'];\r\n      var days = data['days'];\r\n\r\n\r\n\r\n\r\n    for (let i = 0; i < days; i++){\r\n      var arr:ICovidData = {cases: 0, date: \"\", deaths: 0};\r\n\r\n      var nextDate = new Date();\r\n      nextDate.setDate(nextDate.getDate() + 1 + i);\r\n\r\n      arr.cases = cases[i];\r\n      arr.deaths = deaths[i];\r\n      arr.date = nextDate.toLocaleDateString();\r\n      arrData.push(arr);\r\n    }\r\n\r\n\r\n    return arrData;\r\n  }\r\n\r\n}\r\n","<div  class=\"centerVH\" *ngIf=\"loading\">\r\n  <mat-spinner ></mat-spinner>\r\n</div>\r\n\r\n<div *ngIf=\"!loading\">\r\n    <div class=\"mat-elevation-z8\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <ng-container matColumnDef=\"date\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\r\n          <td mat-cell *matCellDef=\"let model\"> {{model.date}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"cases\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Cases </th>\r\n            <td mat-cell *matCellDef=\"let model\" > {{model.cases}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"deaths\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Deaths </th>\r\n            <td mat-cell *matCellDef=\"let model\"> {{model.deaths}} </td>\r\n          </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" ></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <!-- (mouseover)=\"highlightRow(row)\" [ngClass] = \"{'highlight' : row.date == selectedName}\"></tr> -->\r\n\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[10, 20]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n  </div>\r\n\r\n\r\n","import { LoginService } from 'src/app/login/login.service';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table/';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport {ICovidData} from '../CovidData';\r\n\r\n@Component({\r\n  selector: 'app-covidtable',\r\n  templateUrl: './covidtable.component.html',\r\n  styleUrls: ['./covidtable.component.css']\r\n})\r\nexport class CovidtableComponent implements AfterViewInit {\r\n\r\n\r\n  displayedColumns: string[] = ['date','cases', 'deaths'];\r\n  dataSource:MatTableDataSource<ICovidData>;\r\n  response:any;\r\n  loading:boolean = false;\r\n  data:any;\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort:MatSort;\r\n\r\n  public selectedName:any;\r\n\r\n  constructor( private dataService:DataService, private loginService:LoginService){\r\n\r\n    this.requestData(60);\r\n\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n\r\n  public highlightRow(model:any) {\r\n    this.selectedName = model.date;\r\n  }\r\n\r\n  //Function to filter data\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  requestData(days:number){\r\n    this.loading = true;\r\n    var user = this.loginService.user;\r\n    user['days'] = days;\r\n\r\n      this.dataService.getCovidData(user).subscribe(res=>{\r\n        this.data = res['body'].data;\r\n\r\n      }, err=>{\r\n\r\n      },\r\n      ()=>{\r\n\r\n        var tableData = this.formatData(this.data);\r\n        this.dataSource = new MatTableDataSource<ICovidData>(tableData);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n        this.loading = false;\r\n      });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  formatData(data:any){\r\n\r\n    var arrData:ICovidData[] =[];\r\n     //Get key(dates) and values({cases, deaths...} )\r\n     Object.keys(data).forEach(function(key) {\r\n\r\n      var arr:ICovidData = {cases: 0, date: \"\", deaths: 0};\r\n\r\n      var values = data[key];\r\n      values['date'] = key;\r\n\r\n      arr.cases = values['cases'];\r\n      arr.deaths = values['deaths'];\r\n      arr.date = values['date'];\r\n\r\n      arrData.push(arr);\r\n\r\n  });\r\n\r\n  //Descending based on date\r\n    arrData.sort((a, b) => {\r\n      var x = new Date(a.date);\r\n      var y = new Date(b.date);\r\n\r\n      if(x > y){\r\n        return -1;\r\n      }\r\n\r\n      if (x < y){\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n\r\n   return arrData;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n","<div  class=\"centerVH\" *ngIf=\"loading\">\r\n  <mat-spinner ></mat-spinner>\r\n</div>\r\n\r\n<div *ngIf=\"!loading\">\r\n\r\n    <div class=\"mat-elevation-z8\">\r\n      <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <ng-container matColumnDef=\"date\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\r\n          <td mat-cell *matCellDef=\"let model\"> {{model.date}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"cases\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Cases </th>\r\n            <td mat-cell *matCellDef=\"let model\" > {{model.cases}} </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"deaths\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Deaths </th>\r\n            <td mat-cell *matCellDef=\"let model\"> {{model.deaths}} </td>\r\n          </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" ></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <!-- (mouseover)=\"highlightRow(row)\" [ngClass] = \"{'highlight' : row.date == selectedName}\"></tr> -->\r\n\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"[7, 30, 60]\" showFirstLastButtons></mat-paginator>\r\n    </div>\r\n  </div>\r\n\r\n","import { DataService } from './../services/data.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.css']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n  title:string = \"Reports\";\r\n\r\n  constructor(private dataService:DataService) {\r\n    this.dataService.changePageTitle(this.title);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n\r\n  <mat-tab label=\"Covid Records\">\r\n    <app-covidtable></app-covidtable>\r\n\r\n  </mat-tab>\r\n\r\n\r\n  <mat-tab label=\"Covid Predictions\">\r\n    <app-covidpredictions></app-covidpredictions>\r\n  </mat-tab>\r\n\r\n</mat-tab-group>\r\n\r\n","import { CovidpredictionsComponent } from './covidpredictions/covidpredictions.component';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport {ReportsComponent} from './reports.component';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { CovidtableComponent } from './covidtable/covidtable.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {  MatFormFieldModule } from '@angular/material/form-field';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ReportsComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [ReportsComponent,CovidtableComponent, CovidpredictionsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatSortModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsModule { }\r\n"],"sourceRoot":"webpack:///"}