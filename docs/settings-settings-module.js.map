{"version":3,"sources":["./src/app/profileinformation/profileinformation.component.ts","./src/app/profileinformation/profileinformation.component.html","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/settings/settings.module.ts"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["import { LoginService } from 'src/app/login/login.service';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Users } from 'src/app/registration/Users';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-profileinformation',\r\n  templateUrl: './profileinformation.component.html',\r\n  styleUrls: ['./profileinformation.component.css']\r\n})\r\nexport class ProfileinformationComponent implements OnInit {\r\n\r\n  countries:Set<string> =  new Set<string>();\r\n  states = [];\r\n  counties = [];\r\n  model = new Users();\r\n  submitted = false;\r\n  submissionMessage = '';\r\n  errorMessage = false;\r\n  loading:boolean = false;\r\n  stateListEnable = false;\r\n  countyListEnable = false;\r\n\r\n  constructor(private dataService:DataService, private router:Router, private loginService:LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n    this.getCountries();\r\n    //this.getStateProvinces(this.model.state, 0);\r\n    //this.getStateCounties(this.model.county, 0);\r\n\r\n  }\r\n\r\n  getUser(){\r\n      var data = this.loginService.user;\r\n\r\n      this.model.id = data['id'];\r\n      this.model.firstName = data['firstName'];\r\n      this.model.lastName = data['lastName'];\r\n      this.model.userName = data['userName'];\r\n      this.model.country = data['country'];\r\n      this.model.state = data['state'];\r\n      this.model.county = data['county'];\r\n  }\r\n\r\n  onSubmit(){\r\n\r\n    this.sendData();\r\n\r\n\r\n  }\r\n\r\n  cancel(){\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n\r\n  sendData(){\r\n\r\n    this.dataService.updateUser(this.model, 'profile').subscribe(result=>{\r\n      if(result.status == 201){\r\n        this.errorMessage = false;\r\n        this.submitted = true;\r\n        this.submissionMessage = '';\r\n\r\n        this.loginService.logout();\r\n        alert(\"User Info Updated\")\r\n      }\r\n\r\n   },\r\n   err=>{\r\n        this.errorMessage = true;\r\n        this.submissionMessage = \"An error occurred!Try Again...\";\r\n   }\r\n   );\r\n  }\r\n\r\n  getCountries(){\r\n    this.loading = true;\r\n    this.dataService.getCountries().subscribe(data=>{\r\n      if(data.status == 200){\r\n        let result = data['body'].data;\r\n\r\n        this.countries.add('US');\r\n\r\n        for(var c of result){\r\n          this.countries.add(c[0]);\r\n        }\r\n      }\r\n    },\r\n    err=>{\r\n\r\n    },\r\n    ()=>{\r\n      this.loading = false;\r\n    }\r\n    );\r\n  }\r\n\r\n  getStateProvinces(country:string, change:number){\r\n    this.loading = true;\r\n    if(change){\r\n      this.states = [];\r\n      this.stateListEnable = false;\r\n      this.countyListEnable = false;\r\n    }\r\n\r\n    this.dataService.getStates({'country':country}).subscribe(data=>{\r\n      if(data.status == 200){\r\n        this.states = data['body'].data;\r\n        this.states.sort()\r\n      }\r\n\r\n    },err=>{},\r\n    ()=>{\r\n      this.stateListEnable = true;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  getStateCounties(state:string, change:number){\r\n    this.loading = true;\r\n\r\n    if(change){\r\n      this.counties = [];\r\n      this.countyListEnable = false;\r\n    }\r\n\r\n    this.dataService.getCounties({'state':state}).subscribe(data=>{\r\n      if(data.status == 200){\r\n\r\n        this.counties = data['body'].data\r\n        this.counties.sort()\r\n\r\n      }\r\n      this.countyListEnable = true;\r\n      this.loading = false;\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n","<div  class=\"centerVH\" *ngIf=\"loading\">\r\n  <mat-spinner ></mat-spinner>\r\n</div>\r\n\r\n<div *ngIf=\"!loading\">\r\n<mat-card>\r\n  <div class=\"container\" style=\"width:50%\">\r\n    <div [hidden]=\"submitted\">\r\n\r\n      <form (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\">\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n                 required\r\n                 [(ngModel)]=\"model.firstName\" name=\"firstName\"\r\n                 #fname=\"ngModel\"/>\r\n\r\n          <div *ngIf=\"fname.invalid && (fname.dirty || fname.touched)\"\r\n                 class=\"alert alert-danger\">\r\n\r\n\r\n                <div *ngIf=\"fname.errors.required\">\r\n                  First Name is required.\r\n                </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\">Last Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"lastName\"\r\n          required\r\n          [(ngModel)]=\"model.lastName\" name=\"lastName\" #lname=\"ngModel\">\r\n\r\n          <div *ngIf=\"lname.invalid && (lname.dirty || lname.touched)\"\r\n                 class=\"alert alert-danger\">\r\n\r\n                <div *ngIf=\"lname.errors.required\">\r\n                  Last Name is required.\r\n                </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"country\">Country</label>\r\n          <select class=\"form-control\" id=\"country\"  [(ngModel)]=\"model.country\" name=\"country\" #country=\"ngModel\"\r\n            placeholder=\"d.ff\" (change)=\"getStateProvinces(country.value, 1)\">\r\n            <option hidden value=\"\" disabled selected>Select Country </option>>\r\n            <option *ngFor=\"let country of countries\" [value]=\"country\">{{country}}</option>\r\n          </select>\r\n\r\n          <div *ngIf=\"country.invalid && country.touched\" class=\"alert alert-danger\">\r\n\r\n            <div *ngIf=\"country.errors.required\">\r\n              Country is required.\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"state\">State</label>\r\n          <select class=\"form-control\" id=\"role\" [disabled]= \"!stateListEnable\" [(ngModel)]=\"model.state\" name=\"state\" #state=\"ngModel\"\r\n            placeholder=\"d.ff\" (change)=\"getStateCounties(state.value, 1)\">\r\n            <option hidden value=\"\" disabled selected>Select State </option>>\r\n            <option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</option>\r\n          </select>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"county\">County</label>\r\n          <select class=\"form-control\" id=\"county\" [disabled]= \"!countyListEnable\" [(ngModel)]=\"model.county\" name=\"county\" #county=\"ngModel\"\r\n            placeholder=\"d.ff\">\r\n            <option hidden value=\"\" disabled selected>Select County </option>>\r\n            <option *ngFor=\"let county of counties\" [value]=\"county\">{{county}}</option>\r\n          </select>\r\n\r\n        </div>\r\n\r\n        <br>\r\n        <div style=\"text-align: center;\">\r\n        <button type=\"submit\" class=\"btn btn-success\"  [disabled]=\"!userForm.form.valid\">Submit</button>\r\n\r\n        <span style=\"margin-left: 4em;\"></span>\r\n\r\n        <button type=\"button\" mat-raised-button class=\"btn btn-danger\"\r\n        (click)=\"cancel()\">Cancel</button>\r\n\r\n        <div *ngIf = \"errorMessage\" class=\"alert alert-danger\">\r\n          {{submissionMessage}}\r\n        </div>\r\n      </div>\r\n    </form>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../login/login.service';\r\nimport { Users } from '../registration/Users';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.css']\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  title:string =\"Account Settings\";\r\n  model = new Users();\r\n  submitted = false;\r\n  submissionMessage = '';\r\n  checkCurrentP:string; //current password\r\n  checkMatch:string = \"\";\r\n  errorMessage: boolean = false;\r\n\r\n  //Property that get checks in realtime\r\n  get passwordMatch():boolean{\r\n\r\n    return this.model.password == this.checkMatch ? true:false;\r\n\r\n  }\r\n\r\n  constructor(private dataService:DataService, private loginService:LoginService, private router:Router) {\r\n    this.dataService.changePageTitle(this.title);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.getUser();\r\n  }\r\n\r\n\r\n\r\n  onSubmit(){\r\n    this.sendData();\r\n\r\n  }\r\n\r\n  cancel(){\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n\r\n  getUser(){\r\n    var data = this.loginService.user;\r\n\r\n    this.model.id = data['id'];\r\n    this.model.firstName = data['firstName'];\r\n    this.model.lastName = data['lastName'];\r\n    this.model.userName = data['userName'];\r\n    this.model.county = data['country'];\r\n    this.model.state = data['state'];\r\n    this.model.county = data['county'];\r\n\r\n}\r\n\r\nsendData(){\r\n //For password change only\r\n  this.dataService.updateUser(this.model, 'password').subscribe(result=>{\r\n    if(result.status == 201){\r\n      this.errorMessage = false;\r\n      this.submitted = true;\r\n      this.submissionMessage = '';\r\n\r\n      this.loginService.logout();\r\n      alert(\"User Info Updated\")\r\n    }\r\n\r\n },\r\n err=>{\r\n      this.errorMessage = true;\r\n      this.submissionMessage = \"An error occurred!Try Again...\";\r\n }\r\n );\r\n}\r\n\r\n}\r\n","<mat-tab-group mat-align-tabs=\"center\">\r\n\r\n  <mat-tab label=\"Profile Information\">\r\n    <app-profileinformation></app-profileinformation>\r\n  </mat-tab>\r\n\r\n\r\n  <mat-tab label=\"Change Password\">\r\n    <mat-card>\r\n      <div class=\"container\" style=\"width:50%\">\r\n        <div [hidden]=\"submitted\">\r\n\r\n          <form (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\">\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"password\">New Password</label>\r\n              <input type=\"password\" class=\"form-control\" id=\"password\" required minlength=\"6\"\r\n                [(ngModel)]=\"model.password\" name=\"password\" #password=\"ngModel\" placeholder=\"Enter Password\">\r\n\r\n              <div *ngIf=\"password.invalid && password.touched\" class=\"alert alert-danger\">\r\n\r\n                <div *ngIf=\"password.errors.required\">\r\n                  Password is required.\r\n                </div>\r\n\r\n                <div *ngIf=\"password.errors.minlength\">\r\n                  Invalid Password: Minimum Length 6\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"confirmPassword\">New Confirm Password</label>\r\n              <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" required minlength=\"6\"\r\n                [(ngModel)]=\"checkMatch\" name=\"confirmPassword\" #confirmPassword=\"ngModel\"\r\n                placeholder=\"Confirm Password\">\r\n\r\n\r\n              <div *ngIf=\"confirmPassword.invalid && confirmPassword.touched\" class=\"alert alert-danger\">\r\n\r\n                <div *ngIf=\"confirmPassword.errors.required\">\r\n                  Password is required.\r\n                </div>\r\n\r\n                <div *ngIf=\"confirmPassword.errors.minlength\">\r\n                  Invalid Password: Minimum Length 6\r\n                </div>\r\n\r\n              </div>\r\n\r\n              <div *ngIf=\"!passwordMatch && confirmPassword.touched\" class=\"alert alert-danger\">\r\n                Password don't match\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div style=\"text-align: center;\">\r\n              <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!userForm.form.valid && !passwordMatch\">Submit</button>\r\n              <span style=\"margin-left: 4em;\"></span>\r\n\r\n              <button type=\"button\" mat-raised-button class=\"btn btn-danger\"\r\n              (click)=\"cancel()\">Cancel</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </mat-card>\r\n\r\n  </mat-tab>\r\n\r\n</mat-tab-group>\r\n","import { ProfileinformationComponent } from './../profileinformation/profileinformation.component';\r\nimport { SettingsComponent } from './settings.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: SettingsComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [SettingsComponent, ProfileinformationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatSliderModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatProgressSpinnerModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class SettingsModule { }\r\n"],"sourceRoot":"webpack:///"}