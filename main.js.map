{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/globe-threejs/globe-threejs.component.ts","./src/app/home/globe-threejs/globe-threejs.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/table/table.component.ts","./src/app/home/table/table.component.html","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./src/app/layout/header/header.component.ts","./src/app/layout/header/header.component.html","./src/app/layout/sidebar/sidebar.component.ts","./src/app/layout/sidebar/sidebar.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.service.ts","./src/app/registration/Users.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/services/data.service.ts","./src/app/services/routeguard.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\nimport { CovidtableComponent } from './reports/covidtable/covidtable.component';\r\nimport { RouteguardService as RouteGuard} from './services/routeguard.service';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n\r\nconst routes: Routes = [\r\n{\r\n  path: '',\r\n  pathMatch: 'full',\r\n  component:HomeComponent,\r\n  data: { showHeader:true, showSidebar:false}\r\n},\r\n{\r\n  path:'home',\r\n  redirectTo:''\r\n},\r\n{\r\n  path:'login',\r\n  component:LoginComponent,\r\n  data: { showHeader:false, showSidebar:false}\r\n},\r\n{\r\n  path:'globeview',\r\n  loadChildren:() => import('./home/globe-threejs/globe-threejs.module').then(m=> m.GlobeThreejsModule),\r\n  data: { showHeader:true, showSidebar:false, showFooter: false}\r\n},\r\n{\r\n  path:'twitter',\r\n  loadChildren:()=> import ('./twitter/twitter.module').then(m=>m.TwitterModule),\r\n  data: { showHeader:true, showSidebar:true},\r\n  canActivate:[RouteGuard]\r\n},\r\n{\r\n  path:'dashboard',\r\n  loadChildren:() => import('./dashboard/dashboard.module').then(m=> m.DashboardModule),\r\n  data: { showHeader:true, showSidebar:true},\r\n  canActivate:[RouteGuard]\r\n},\r\n{\r\n  path:'reports',\r\n  loadChildren:() => import('./reports/reports.module').then(m=> m.ReportsModule),\r\n  data: { showHeader:true, showSidebar:true},\r\n  canActivate:[RouteGuard]\r\n},\r\n{\r\n  path:'settings',\r\n  loadChildren:() => import('./settings/settings.module').then(m=> m.SettingsModule),\r\n  data: { showHeader:true, showSidebar:true},\r\n  canActivate:[RouteGuard]\r\n},\r\n{\r\n  path:'registration',\r\n  component:RegistrationComponent,\r\n  data: { showHeader:false, showSidebar:false}\r\n}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { DataService } from './services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'covidApp';\r\n  showHeader = false;\r\n  showSidebar = false;\r\n  showFooter = false;\r\n  activeMenu = false;\r\n  isGlobeView = false;\r\n\r\n  constructor(private router: Router, private activatedRoute: ActivatedRoute,\r\n    private dataService:DataService){}\r\n\r\n  ngOnInit() {\r\n    this.dataService.currentSidebarStatus.subscribe(s=> this.activeMenu = s);\r\n    this.dataService.currentView.subscribe(s => this.isGlobeView = s);\r\n\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationEnd) {\r\n        this.showHeader = this.activatedRoute.firstChild.snapshot.data.showHeader !== false;\r\n        this.showSidebar = this.activatedRoute.firstChild.snapshot.data.showSidebar !== false;\r\n        this.showFooter = this.activatedRoute.firstChild.snapshot.data.showFooter !== false;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n","\r\n<header class=\"bar\">\r\n  <app-header *ngIf=\"showHeader\" fxLayout=\"column\" ></app-header>\r\n</header>\r\n\r\n  <div fxLayout=\"row\" fxFlex=\"100\" >\r\n\r\n    <app-sidebar  *ngIf=\"showSidebar && activeMenu\" fxLayout=\"column\" fxFlex=\"250px\" class=\"bar\"></app-sidebar>\r\n\r\n    <div class=\"content\" [ngClass]=\"{'regularcontent' : !isGlobeView,'globeview' : isGlobeView}\" fxLayout=\"column\" fxFlex>\r\n      <router-outlet ></router-outlet>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <footer *ngIf=\"showFooter\">\r\n    <app-footer></app-footer>\r\n  </footer>\r\n\r\n\r\n\r\n\r\n","import { GlobeThreejsComponent } from './home/globe-threejs/globe-threejs.component';\r\nimport { TableComponent } from './home/table/table.component';\r\nimport { CovidtableComponent } from './reports/covidtable/covidtable.component';\r\nimport { MatSort, MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport { HeaderComponent } from './layout/header/header.component';\r\nimport { FooterComponent } from './layout/footer/footer.component';\r\nimport { SidebarComponent } from './layout/sidebar/sidebar.component';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { NgxWebstorageModule } from 'ngx-webstorage';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { MatFormFieldModule, MatLabel } from '@angular/material/form-field';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    SidebarComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    TableComponent,\r\n    GlobeThreejsComponent,\r\n    RegistrationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    MatSliderModule,\r\n    MatButtonModule,\r\n    MatProgressBarModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    NgxWebstorageModule.forRoot(),\r\n\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport * as THREE from 'three';\r\n//import { OrbitControls } from 'three-orbit-controls';\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\r\nimport { IGlobeData } from './IGlobeData';\r\nimport { ReturnStatement } from '@angular/compiler';\r\nimport { Router } from '@angular/router';\r\n//import {COLORS} from './Colors';\r\n\r\nconst COLORS = ['red', 'yellow', 'blue', 'green', 'purple', 'black', 'magenta', 'orange', 'gold', 'brown', 'lightgreen']\r\n\r\n@Component({\r\n  selector: 'app-globe-threejs',\r\n  templateUrl: './globe-threejs.component.html',\r\n  styleUrls: ['./globe-threejs.component.css'],\r\n})\r\nexport class GlobeThreejsComponent implements OnInit, OnDestroy {\r\n  private data: IGlobeData[] = []; //holds api data\r\n  scene: THREE.Scene; //where objects will be placed (kind of like a stage)\r\n  camera: THREE.PerspectiveCamera = new THREE.PerspectiveCamera(75,window.innerWidth / window.innerHeight,0.1,1000);\r\n  renderer: THREE.WebGLRenderer; //display the created objects\r\n  raycaster: THREE.Raycaster; //raycaster for mouse interaction\r\n  mouse: THREE.Vector2; // CREATE vector2 for mouse x,y coordinates\r\n  lManager:THREE.LoadingManager = new THREE.LoadingManager();\r\n\r\n  earthClouds: THREE.Mesh;\r\n  controls: OrbitControls;\r\n  loadingData: boolean = false;\r\n  changingLocationLoading = false;\r\n  disableshowLocationsButton:boolean = false;\r\n\r\n  pointData:IGlobeData;\r\n\r\n  get myPointData():IGlobeData{\r\n    //Shouldnt become undefined, but it prevents the app from freezing if it does\r\n    if(this.pointData == undefined){\r\n      this.pointData = {country:'*', state:'*', county:'*', cases:0, deaths:0, population:0, latitude:0, longitude:0};\r\n      return this.pointData;\r\n    }\r\n    else{\r\n      return this.pointData;\r\n    }\r\n\r\n  }\r\n  countries:Set<string> = new Set()\r\n  states:string[] = ['All'];\r\n  counties:string[] = ['All'];\r\n  selectedCountry:string;\r\n  selected_Province_State:string;\r\n  selectedCounty:string;\r\n  changePointRadiusSize = false;\r\n\r\n  get showProvincesState():boolean{\r\n    return this.states.length > 1;\r\n  }\r\n\r\n  get showCounties():boolean{\r\n    return this.counties.length > 1;\r\n  }\r\n\r\n  //Change buttons name depending on values\r\n  showInstructionsBox: boolean = true;\r\n  get buttonNameInst(): string {\r\n\r\n    return this.showInstructionsBox ? 'Hide Instructions' : 'Show Instructions';\r\n  }\r\n\r\n  private animationId: number;\r\n  title = 'Globe';\r\n\r\n  constructor(private dataService: DataService, private router:Router) {\r\n    this.dataService.changePageTitle(this.title);\r\n    this.dataService.changeView(true);\r\n    this.run();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    //Stop animation and delete all objects\r\n    cancelAnimationFrame(this.animationId);\r\n\r\n    document.body.removeChild(this.renderer.domElement);\r\n    this.scene.clear();\r\n    this.renderer.dispose();\r\n    this.camera.clear();\r\n    this.controls.dispose();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  async run() {\r\n    await this.getData();\r\n    this.createScene();\r\n    this.setupCamera();\r\n    this.setupMouseInteractivity();\r\n    this.configureRenderer();\r\n    this.createEarth();\r\n    this.addListeners();\r\n    this.setupControls();\r\n\r\n    this.animate();\r\n  }\r\n\r\n  // Allows for the scene to move and be interacted with\r\n  animate() {\r\n    this.animationId = requestAnimationFrame(this.animate.bind(this));\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.controls.update();\r\n  }\r\n\r\n  private createScene() {\r\n    //where objects will be placed (kind of like a stage)\r\n    this.scene = new THREE.Scene();\r\n  }\r\n\r\n  setupCamera() {\r\n    // Change position so we can see the objects (change x, y for default country/continent view)\r\n    this.camera.position.x = -3.5;\r\n    this.camera.position.y = 13.5;\r\n    this.camera.position.z = 10;\r\n    //Returns camera to default settings\r\n  }\r\n\r\n  private setupControls() {\r\n    // CREATE controls so that we can interact with the objects/have interactivity\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n\r\n    // Disable control function, so users do not zoom too far in or pan away from center\r\n    this.controls.minDistance = 12;\r\n    this.controls.maxDistance = 30;\r\n    this.controls.enablePan = false;\r\n    this.controls.update();\r\n    this.controls.saveState();\r\n  }\r\n\r\n  private setupMouseInteractivity() {\r\n    this.raycaster = new THREE.Raycaster(); //raycaster for mouse interaction\r\n    this.mouse = new THREE.Vector2(); // CREATE vector2 for mouse x,y coordinates\r\n  }\r\n\r\n  private createEarth() {\r\n    // Earthmap is used for the basic texture which has the various continents/countries/etc. on it\r\n    let earthMap = new THREE.TextureLoader().load(\r\n      'assets/myglobe_images/earthmap4k.jpg'\r\n    );\r\n\r\n    // EarthBumpMap is used to give the texture some \"depth\" so it is more appealing on eyes and data visuals\r\n    let earthBumpMap = new THREE.TextureLoader().load(\r\n      'assets/myglobe_images/earthbump4k.jpg'\r\n    );\r\n\r\n    // EarthSpecMap gies the earth some shininess to the environment, allowing reflectivity off of the lights\r\n    let earthSpecMap = new THREE.TextureLoader().load(\r\n      'assets/myglobe_images/earthspec4k.jpg'\r\n    );\r\n\r\n    // Geometry is what the shape/size of the globe will be\r\n    let earthGeometry = new THREE.SphereGeometry(10, 32, 32);\r\n\r\n    // Material is how the globe will look like\r\n    let earthMaterial = new THREE.MeshPhongMaterial({\r\n      map: earthMap,\r\n      bumpMap: earthBumpMap,\r\n      bumpScale: 0.1,\r\n      specularMap: earthSpecMap,\r\n      specular: new THREE.Color('grey'),\r\n    });\r\n\r\n    // Earth is the final product which ends up being rendered on scene, also is used as a grandparent for the points of interest\r\n    let earth = new THREE.Mesh(earthGeometry, earthMaterial);\r\n\r\n    this.createCloudTextures(); //Add clouds to earth\r\n    earth.add(this.earthClouds);\r\n\r\n    //Add earth to the scene\r\n    this.scene.add(earth);\r\n\r\n    this.createSkyBox();\r\n    this.createLights();\r\n\r\n  }\r\n\r\n  private createCloudTextures() {\r\n    return new Promise((resolve, reject) => {\r\n    // Add clouds to the earth object\r\n    let earthCloudGeo = new THREE.SphereGeometry(10, 32, 32);\r\n\r\n    // Add cloud texture\r\n    let earthCloudsTexture = new THREE.TextureLoader().load(\r\n      'assets/myglobe_images/earthhiresclouds4K.jpg'\r\n    );\r\n\r\n    // Add cloud material\r\n    let earthMaterialClouds = new THREE.MeshLambertMaterial({\r\n      color: 0xffffff,\r\n      map: earthCloudsTexture,\r\n      transparent: true,\r\n      opacity: 0.4,\r\n    });\r\n\r\n    // Create final texture for clouds\r\n    this.earthClouds = new THREE.Mesh(earthCloudGeo, earthMaterialClouds);\r\n\r\n    // Scale above the earth sphere mesh\r\n    this.earthClouds.scale.set(1.015, 1.015, 1.015);\r\n\r\n    resolve(true);\r\n  });\r\n  }\r\n\r\n  private createSkyBox() {\r\n    //  allows the scene to have more attractiveness to it, in this case by having the blue starred images around Earth\r\n\r\n    let loader = new THREE.CubeTextureLoader();\r\n    let texture = loader.load([\r\n      'assets/myglobe_images/space_right.png',\r\n      'assets/myglobe_images/space_left.png',\r\n      'assets/myglobe_images/space_top.png',\r\n      'assets/myglobe_images/space_bot.png',\r\n      'assets/myglobe_images/space_front.png',\r\n      'assets/myglobe_images/space_back.png',\r\n    ]);\r\n    this.scene.background = texture;\r\n  }\r\n\r\n  private createLights() {\r\n    let lights = [];\r\n    lights[0] = new THREE.PointLight('#004d99', 0.5, 0);\r\n    lights[1] = new THREE.PointLight('#004d99', 0.5, 0);\r\n    lights[2] = new THREE.PointLight('#004d99', 0.7, 0);\r\n    lights[3] = new THREE.AmbientLight('#ffffff');\r\n\r\n    lights[0].position.set(200, 0, -400);\r\n    lights[1].position.set(200, 200, 400);\r\n    lights[2].position.set(-200, -200, -50);\r\n\r\n    //creates the lights to be added them to the scene.\r\n    for (let i = 0; i < lights.length; i++) {\r\n      this.scene.add(lights[i]);\r\n    }\r\n  }\r\n\r\n  private configureRenderer() {\r\n    this.renderer = new THREE.WebGLRenderer();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.body.appendChild(this.renderer.domElement);\r\n  }\r\n\r\n  //   // Create and add coordinates for the globe\r\n  private addCountyCoord(\r\n    country,\r\n    state,\r\n    county,\r\n    cases,\r\n    deaths,\r\n    latitude,\r\n    longitude,\r\n    population,\r\n    color\r\n  ) {\r\n\r\n    //0.035 for counties only\r\n    let sphereRadiusSize:number = this.changePointRadiusSize ? 0.035:0.1;\r\n    let pointOfInterest = new THREE.SphereGeometry(sphereRadiusSize, 32, 32);\r\n    let lat = latitude * (Math.PI / 180);\r\n    let lon = -longitude * (Math.PI / 180);\r\n    const radius = 10;\r\n\r\n\r\n    let material = new THREE.MeshBasicMaterial({\r\n      color: color,\r\n    });\r\n\r\n    let mesh = new THREE.Mesh(pointOfInterest, material);\r\n\r\n    mesh.position.set(\r\n      Math.cos(lat) * Math.cos(lon) * radius,\r\n      Math.sin(lat) * radius,\r\n      Math.cos(lat) * Math.sin(lon) * radius\r\n    );\r\n\r\n    mesh.rotation.set(0.0, -lon, lat - Math.PI * 0.5);\r\n\r\n    mesh.userData.country = country;\r\n    mesh.userData.state = state;\r\n    mesh.userData.county = county;\r\n    mesh.userData.population = population;\r\n    mesh.userData.color = color;\r\n    mesh.userData.cases = cases;\r\n    mesh.userData.deaths = deaths;\r\n\r\n    this.earthClouds.add(mesh);\r\n  }\r\n\r\n  // Changes the information so data points can be seen\r\n  addLocationData(type:string) {\r\n          this.changingLocationLoading = true;\r\n          var filteredData:IGlobeData[] = this.data.filter(data=> data.country == this.selectedCountry);\r\n          this.changePointRadiusSize = false;\r\n          this.removeChildren();\r\n\r\n          if(type == 'Country'){\r\n\r\n              this.counties = ['All'];\r\n              this.states = ['All'];\r\n              if(this.selectedCountry == 'US'){\r\n\r\n                //Filter further to avoid slowing dow browser since there is a lot of data for the US\r\n                this.updateDisplayBoard(filteredData, type);\r\n\r\n                //Include one county per state for mapping points on globe - representing state points\r\n                var tmp:IGlobeData[] = [];\r\n                let statesAdded:string[] = [];\r\n                for(let i = 0; i < filteredData.length; i++){\r\n\r\n                  if(!statesAdded.includes(filteredData[i].state)){\r\n                    statesAdded.push(filteredData[i].state);\r\n                    tmp.push(filteredData[i]);\r\n                  }\r\n                }\r\n                let tmpArr = ['All'].concat(statesAdded.sort());\r\n                this.states =  tmpArr;\r\n                filteredData = tmp;\r\n\r\n              }\r\n              else{\r\n\r\n                this.updateDisplayBoard(filteredData, type);\r\n\r\n                if(this.selectedCountry == 'World'){\r\n                  //Show all countries points\r\n                  filteredData = this.data.filter(data=> data.state == null || data.state == '*');\r\n\r\n                }\r\n                else{\r\n\r\n                  for(let i = 0; i < filteredData.length; i++){\r\n                    if(filteredData[i].state != null){\r\n                      this.states.push(filteredData[i].state)\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              this.selected_Province_State == null;\r\n          }\r\n\r\n        else if(type == 'Prov_State'){\r\n            this.selectedCounty = null;\r\n            this.counties = ['All'];\r\n\r\n              if(this.selected_Province_State != 'All' && this.selected_Province_State != null){\r\n                filteredData = this.data.filter(data=> data.state == this.selected_Province_State);\r\n                this.updateDisplayBoard(filteredData, type);\r\n\r\n                if(this.selectedCountry == 'US'){\r\n                  this.updateTotals(filteredData);\r\n                  this.changePointRadiusSize = true;\r\n                }\r\n              }\r\n              else{\r\n                this.changePointRadiusSize = false;\r\n                this.updateDisplayBoard(filteredData, type);\r\n              }\r\n        }\r\n        else{\r\n           //County Data\r\n\r\n          if(this.selected_Province_State != 'All' && this.selected_Province_State != null){\r\n\r\n            filteredData = this.data.filter(data=> data.state == this.selected_Province_State);\r\n          }\r\n\r\n              if(this.selectedCounty != 'All' && this.selectedCounty != null){\r\n                this.changePointRadiusSize = false;\r\n                filteredData = filteredData.filter(data=> data.county == this.selectedCounty);\r\n                this.updateDisplayBoard(filteredData, type);\r\n\r\n              }\r\n\r\n              else{\r\n\r\n                this.counties = ['All'];\r\n                this.changePointRadiusSize = true;\r\n                this.updateTotals(filteredData);\r\n              }\r\n          }\r\n        this.removeBlanksandSymbols();\r\n        //console.log(filteredData)\r\n      // Insert data  into the globe (points)\r\n        let numOfColors = COLORS.length;\r\n        for (let i = 0, colorIndex = 0; i < filteredData.length; i++, colorIndex++) {\r\n\r\n          if(colorIndex == numOfColors){\r\n            colorIndex = 0; //Repeat colors if list of colors if less than data points\r\n          }\r\n          //COLOR[colorIndex] - gives different colors to each point\r\n          this.addCountyCoord(filteredData[i].country, filteredData[i].state, filteredData[i].county, filteredData[i].cases, filteredData[i].deaths, filteredData[i].latitude, filteredData[i].longitude, filteredData[i].population, COLORS[colorIndex]);\r\n\r\n        }\r\n\r\n        this.changingLocationLoading = false;\r\n  }\r\n\r\n  //Updated display info without click on globe\r\n  private updateDisplayBoard(filteredData:IGlobeData[], type:string){\r\n    if(type == 'Country'){\r\n      filteredData = filteredData.filter(data=> data.state == null || data.state == '*');\r\n      this.pointData = filteredData[0];\r\n      this.pointData.state = '*';\r\n      this.pointData.county = '*';\r\n    }\r\n    else if(type == 'Prov_State'){\r\n      this.pointData = filteredData[0];\r\n      this.pointData.county = '*';\r\n    }\r\n    else{\r\n      this.pointData = filteredData[0];\r\n    }\r\n\r\n  }\r\n\r\n  private removeBlanksandSymbols(){\r\n    let index = this.states.indexOf('*');\r\n    if (index > -1) {\r\n      this.states.splice(index, 1);\r\n    }\r\n\r\n    index = this.states.indexOf('');\r\n    if (index > -1) {\r\n      this.states.splice(index, 1);\r\n    }\r\n\r\n    index = this.states.indexOf(' ');\r\n    if (index > -1) {\r\n      this.states.splice(index, 1);\r\n    }\r\n\r\n    index = this.counties.indexOf('*');\r\n    if (index > -1) {\r\n      this.counties.splice(index, 1);\r\n    }\r\n\r\n    index = this.counties.indexOf('');\r\n    if (index > -1) {\r\n      this.counties.splice(index, 1);\r\n    }\r\n\r\n    index = this.counties.indexOf(' ');\r\n    if (index > -1) {\r\n      this.counties.splice(index, 1);\r\n    }\r\n\r\n  }\r\n\r\n  //Updates totals by state to be displayed when a state is chosen\r\n  private updateTotals(filteredData:IGlobeData[]){\r\n              let totalCases = 0;\r\n              let totalDeaths = 0;\r\n              let totalPopulation = 0;\r\n\r\n              for(let i = 0; i < filteredData.length; i++){\r\n                this.counties.push(filteredData[i].county)\r\n                totalCases += filteredData[i].cases;\r\n                totalDeaths += filteredData[i].deaths;\r\n                totalPopulation += filteredData[i].population;\r\n              }\r\n              //State/Province data\r\n              this.pointData.country = this.selectedCountry;\r\n              this.pointData.state = this.selected_Province_State;\r\n              this.pointData.cases = totalCases;\r\n              this.pointData.deaths = totalDeaths;\r\n              this.pointData.population = totalPopulation;\r\n              this.pointData.county = '*';\r\n\r\n  }\r\n\r\n  // Removes the points of interest freeing up memory and space to have better performance\r\n  private removeChildren() {\r\n    let destroy = this.earthClouds.children.length;\r\n    while (destroy--) {\r\n      //this.earthClouds.remove(this.earthClouds.children[destroy].material.dispose())\r\n      //this.earthClouds.remove(this.earthClouds.children[destroy].geometry.dispose())\r\n      this.earthClouds.remove(this.earthClouds.children[destroy]);\r\n    }\r\n  }\r\n\r\n  // Add event listeners so DOM knows what functions to use when objects/items are interacted with\r\n  addListeners() {\r\n    window.addEventListener('resize', this.onWindowResize.bind(this), false);\r\n    window.addEventListener('click', this.onWindowClick.bind(this), false);\r\n  }\r\n\r\n  // Resizes the window when it changes\r\n  private onWindowResize() {\r\n    this.camera.aspect = window.innerWidth / window.innerHeight;\r\n    this.camera.updateProjectionMatrix();\r\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n  }\r\n\r\n  // Listens for the mouse to intersect object and when clicked returns the data to the inner html\r\n  private onWindowClick(event) {\r\n    event.preventDefault();\r\n    this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n    this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\r\n    this.raycaster.setFromCamera(this.mouse, this.camera);\r\n\r\n    let intersects = this.raycaster.intersectObjects(this.earthClouds.children);\r\n    if(intersects[0] != undefined){\r\n\r\n      var tmpData:any = intersects[0].object.userData;\r\n      this.pointData = tmpData;\r\n      let point = intersects[0].point;\r\n      this.camera.position.copy(point).normalize(); //move camera a bit closer to point selected\r\n\r\n    }\r\n\r\n  }\r\n\r\n  //Toggles instruction box\r\n  displayInstructionsBox() {\r\n    this.showInstructionsBox = !this.showInstructionsBox;\r\n  }\r\nexit(){\r\n\r\n  this.router.navigate(['home']).then(()=>{\r\n    //Reloads application to better display the other pages without being affected by threejs\r\n    window.location.reload();\r\n  });\r\n\r\n}\r\n  //Retrieve data from API\r\n  private getData() {\r\n    return new Promise((resolve, reject) => {\r\n      this.loadingData = true;\r\n      this.dataService.getGlobeData().subscribe(\r\n        (result) => {\r\n          if (result.status == 200) {\r\n            this.data = result.body['data'];\r\n          }\r\n\r\n          this.countries.add('World');\r\n          this.countries.add('US');\r\n          for(let i = 0; i < this.data.length; i++){\r\n            this.countries.add(this.data[i].country)\r\n          }\r\n\r\n        },\r\n        (err) => {\r\n          reject(false)\r\n        },\r\n\r\n        () => {\r\n          //Resolve when complete\r\n          this.loadingData = false;\r\n          resolve(true);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"centerVH\" *ngIf=\"loadingData\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n  <div class=\"mycontrols\">\r\n\r\n    <div style=\"color: white;\">\r\n      <label style=\"text-align: center;\" for=\"country\" >Select Country</label>\r\n      <select class=\"form-control\" id=\"country\" [(ngModel)]=\"selectedCountry\" name=\"country\" #country=\"ngModel\"(change)=\"addLocationData('Country')\">\r\n        <option value=\"\" disabled selected>Select Country </option>\r\n        <option *ngFor=\"let item of countries\" [value]=\"item\">{{item}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <span style=\"margin-bottom: 1em;\"></span>\r\n\r\n    <div style=\"color: white;\" *ngIf=\"showProvincesState\">\r\n      <label style=\"text-align: center;\" for=\"province_state\" >Select Province/State</label>\r\n      <select class=\"form-control\" id=\"province_state\" [(ngModel)]=\"selected_Province_State\" name=\"province_state\" #province_state=\"ngModel\"(change)=\"addLocationData('Prov_State')\">\r\n        <option value=\"\" disabled selected>Select Province/State </option>\r\n        <option *ngFor=\"let item of states\" [value]=\"item\">{{item}}</option>\r\n      </select>\r\n    </div>\r\n\r\n    <span style=\"margin-bottom: 1em;\"></span>\r\n\r\n    <div style=\"color: white;\" *ngIf=\"showCounties\">\r\n      <label style=\"text-align: center;\" for=\"county\" >Select County</label>\r\n      <select class=\"form-control\" id=\"county\" [(ngModel)]=\"selectedCounty\" name=\"county\" #county=\"ngModel\"(change)=\"addLocationData('County')\">\r\n        <option value=\"\" disabled selected>Select County </option>\r\n        <option *ngFor=\"let item of counties\" [value]=\"item\">{{item}}</option>\r\n      </select>\r\n    </div>\r\n\r\n      <!-- Use a different loader, TODO - add threejs load manager -->\r\n    <mat-progress-bar *ngIf=\"changingLocationLoading\" mode=\"indeterminate\"></mat-progress-bar>\r\n\r\n    <span style=\"margin-bottom: 1em;\"></span>\r\n    <button  class=\"btn my-button\" (click)=\"setupCamera()\">Reset Camera (Default View)</button>\r\n    <span style=\"margin-bottom: 1em;\"></span>\r\n    <button class=\"btn my-button\" (click)=\"displayInstructionsBox()\">{{buttonNameInst}}</button>\r\n    <span style=\"margin-bottom: 1em;\"></span>\r\n    <button class=\"btn my-button\" (click)=\"exit()\">Go to Home Page</button>\r\n  </div>\r\n\r\n\r\n<div class=\"instruction-box\" *ngIf=\"showInstructionsBox\">\r\n  <div style=\"text-align: center;\">\r\n    <h3>INSTRUCTIONS</h3>\r\n  </div>\r\n  <h3>- Choose Location </h3>\r\n  <h3>- Click, Hold, and Drag mouse to rotate Globe</h3>\r\n  <h3>- Click on a point to display location data</h3>\r\n  <h3>- Zoom In/Out to point</h3>\r\n</div>\r\n\r\n<div class=\"display-data\">\r\n\r\n  <h3>Country: {{myPointData.country}}</h3>\r\n  <h3>PROVINCE/STATE: {{myPointData.state}}</h3>\r\n  <h3>COUNTY: {{myPointData.county}}</h3>\r\n  <h3>POPULATION: {{myPointData.population}}</h3>\r\n  <h3>CASES: {{myPointData.cases}}</h3>\r\n  <h3>DEATHS: {{myPointData.deaths}}</h3>\r\n  <br>\r\n  <br>\r\n  <h4>-- All/Unselected (*) --</h4>\r\n\r\n</div>\r\n\r\n\r\n","import { Users } from 'src/app/registration/Users';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../services/data.service';\r\nimport { usStates } from '../services/States';\r\nimport * as THREE from 'three';\r\nimport { ICovidData } from '../reports/CovidData';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  title:string = \"Covid Reporting Tool\";\r\n  model = new Users();\r\n  countries:Set<string> =  new Set<string>();\r\n  states = [];\r\n  counties = [];\r\n  submitted = false;\r\n  submissionMessage = '';\r\n  errorMessage = false;\r\n  loading:boolean = false;\r\n  globeView = false;\r\n  data:any = null;\r\n  stateListEnable = false;\r\n  countyListEnable = false;\r\n\r\n\r\n  constructor(private dataService:DataService, private router:Router) {\r\n    this.dataService.changePageTitle(this.title);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCountries();\r\n  }\r\n\r\n\r\n  getCountries(){\r\n    this.loading = true;\r\n    this.dataService.getCountries().subscribe(data=>{\r\n      if(data.status == 200){\r\n        let result = data['body'].data;\r\n\r\n        this.countries.add('World');\r\n        this.countries.add('US');\r\n\r\n        for(var c of result){\r\n          this.countries.add(c[0]);\r\n        }\r\n      }\r\n    },\r\n    err=>{\r\n\r\n    },\r\n    ()=>{\r\n      this.loading = false;\r\n    }\r\n    );\r\n  }\r\n\r\n  getStateProvinces(country:string){\r\n    this.loading = true;\r\n    this.states = [];\r\n    this.stateListEnable = false;\r\n    this.countyListEnable = false;\r\n\r\n    this.dataService.getStates({'country':country}).subscribe(data=>{\r\n      if(data.status == 200){\r\n        this.states = data['body'].data;\r\n        this.states.sort()\r\n      }\r\n\r\n    },err=>{},\r\n    ()=>{\r\n      this.stateListEnable = true;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  getStateCounties(state:string){\r\n    this.loading = true;\r\n    this.counties = [];\r\n    this.countyListEnable = false;\r\n\r\n    this.dataService.getCounties({'state':state}).subscribe(data=>{\r\n      if(data.status == 200){\r\n\r\n        this.counties = data['body'].data\r\n        this.counties.sort()\r\n\r\n      }\r\n      this.countyListEnable = true;\r\n      this.loading = false;\r\n\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n    this.model.days = 30;\r\n    this.dataService.location = this.model;\r\n    this.loading = false;\r\n    this.submitted = true;\r\n  }\r\n\r\n  newReport(){\r\n    this.model = new Users();\r\n    this.countyListEnable = false;\r\n    this.submitted = false;\r\n\r\n  }\r\n\r\n  switchToGlobe(){\r\n    this.router.navigate(['globeview']);\r\n\r\n  }\r\n\r\n}\r\n","\r\n  <div style=\"text-align: center;\">\r\n    <br>\r\n    <br>\r\n    <h3>To get full access to the application features (Reports, Predictions, Twitter Sentiment analysis), <a\r\n        [routerLink]=\"['/registration']\">Create</a> and/or <a [routerLink]=\"['/login']\">Login</a> to your account</h3>\r\n    <p>Disclaimer: Covid predictions are for educational/learning purposes only </p>\r\n    <br>\r\n    <br>\r\n  </div>\r\n\r\n  <div class=\"centerVH\" *ngIf=\"loading\">\r\n    <mat-spinner></mat-spinner>\r\n  </div>\r\n\r\n  <div *ngIf=\"!loading && !submitted\">\r\n    <mat-card>\r\n      <div class=\"container\" style=\"width:50%\">\r\n        <form (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\">\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"country\">Country</label>\r\n            <select class=\"form-control\" id=\"country\" required [(ngModel)]=\"model.country\" name=\"country\" #country=\"ngModel\"\r\n              placeholder=\"Select Country\" (change)=\"getStateProvinces(country.value)\">\r\n              <option hidden value=\"\" disabled selected>Select Country </option>>\r\n              <option *ngFor=\"let country of countries\" [value]=\"country\">{{country}}</option>\r\n            </select>\r\n\r\n            <div *ngIf=\"country.invalid && country.touched\" class=\"alert alert-danger\">\r\n\r\n              <div *ngIf=\"country.errors.required\">\r\n                Country is required.\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"state\">State</label>\r\n            <select class=\"form-control\" id=\"state\" [disabled]= \"!stateListEnable\" [(ngModel)]=\"model.state\" name=\"state\" #state=\"ngModel\"\r\n              placeholder=\"Select State\" (change)=\"getStateCounties(state.value)\">\r\n              <option hidden value=\"\" disabled selected>Select State </option>>\r\n              <option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</option>\r\n            </select>\r\n\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"county\">County</label>\r\n            <select class=\"form-control\" id=\"county\" [disabled]= \"!countyListEnable\" [(ngModel)]=\"model.county\" name=\"county\" #county=\"ngModel\"\r\n              placeholder=\"d.ff\">\r\n              <option hidden value=\"\" disabled selected>Select County </option>>\r\n              <option *ngFor=\"let county of counties\" [value]=\"county\">{{county}}</option>\r\n            </select>\r\n\r\n          </div>\r\n\r\n          <br>\r\n          <div style=\"text-align: center;\">\r\n            <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!userForm.form.valid\">Get Report (Table View)</button>\r\n\r\n            <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\r\n              {{submissionMessage}}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <!-- Show Table -->\r\n\r\n  <div *ngIf=\"!loading && submitted\">\r\n    <app-table></app-table>\r\n    <br>\r\n    <div style=\"text-align: center;\">\r\n      <button mat-raised-button class=\"btn btn-success\" (click)=\"newReport()\">Get New Report</button>\r\n      <br>\r\n    </div>\r\n  </div>\r\n  <br>\r\n  <br>\r\n\r\n<div style=\"text-align: center;\" *ngIf=\"!globeView && !submitted\">\r\n  <button mat-raised-button class=\"btn btn-success\" (click)=\"switchToGlobe()\">Get Map (Globe View)</button>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ICovidData } from 'src/app/reports/CovidData';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css']\r\n})\r\nexport class TableComponent implements OnInit {\r\n\r\n  displayedColumns: string[] = ['date','cases', 'deaths'];\r\n  dataSource:MatTableDataSource<ICovidData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort:MatSort;\r\n  location:any;\r\n  get tableName():string{\r\n\r\n    let name = '';\r\n    if (this.location['state'] != undefined){\r\n      console.log('Here 1')\r\n      if (this.location['county'] != undefined){\r\n        name = this.location['country'] + ', ' + this.location['state'] + ', ' + this.location['county']\r\n\r\n      }\r\n      else{\r\n\r\n        name = this.location['country'] + ', ' + this.location['state']\r\n\r\n      }\r\n\r\n      return name;\r\n    }\r\n\r\n    name = this.location['country'];\r\n    return name;\r\n  }\r\n\r\n  constructor(private dataService:DataService) {\r\n\r\n    this.requestData();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  async requestData(){\r\n\r\n    this.location = this.dataService.location;\r\n      var data =  await this.dataService.getCovidData(this.location).toPromise().then(res=> {\r\n        var data = res['body'].data;\r\n        return data;\r\n      });\r\n\r\n    var tableData = this.formatData(data);\r\n\r\n    this.dataSource = new MatTableDataSource<ICovidData>(tableData);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n\r\n  formatData(data:any){\r\n\r\n    var arrData:ICovidData[] =[];\r\n     //Get key(dates) and values({cases, deaths...} )\r\n     Object.keys(data).forEach(function(key) {\r\n\r\n      var arr:ICovidData = {cases: 0, date: \"\", deaths: 0};\r\n\r\n      var values = data[key];\r\n      values['date'] = key;\r\n\r\n      arr.cases = values['cases'];\r\n      arr.deaths = values['deaths'];\r\n\r\n      arr.date = values['date'];\r\n\r\n      arrData.push(arr);\r\n\r\n  });\r\n\r\n  //Descending based on date\r\n    arrData.sort((a, b) => {\r\n      var x = new Date(a.date);\r\n      var y = new Date(b.date);\r\n\r\n      if(x > y){\r\n        return -1;\r\n      }\r\n\r\n      if (x < y){\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    });\r\n\r\n   return arrData;\r\n  }\r\n\r\n}\r\n","\r\n  <div class=\"mat-elevation-z8\">\r\n    <div style=\"text-align: center;\">\r\n      <h2>Showing Report for {{tableName}}  </h2>\r\n    </div>\r\n\r\n    <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n      <!--- Note that these columns can be defined in any order.\r\n            The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n      <ng-container matColumnDef=\"date\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Date </th>\r\n        <td mat-cell *matCellDef=\"let model\"> {{model.date}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"cases\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Cases </th>\r\n        <td mat-cell *matCellDef=\"let model\"> {{model.cases}} </td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"deaths\">\r\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> Deaths </th>\r\n        <td mat-cell *matCellDef=\"let model\"> {{model.deaths}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n    </table>\r\n\r\n    <mat-paginator [pageSizeOptions]=\"[7, 14, 30]\" showFirstLastButtons></mat-paginator>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n\r\n  <div style=\"margin-left: 42%;\">\r\n\r\n    <h4>@Jesualdo Cristovao - 2020</h4>\r\n  </div>\r\n\r\n\r\n</mat-toolbar>\r\n","import { Users } from 'src/app/registration/Users';\r\nimport { DataService } from './../../services/data.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/login/login.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit{\r\n\r\n  sidebarStatus:boolean = false;\r\n  pageTitle:string;\r\n  showMenu:boolean = false;;\r\n  isLoggedin:boolean;\r\n  userInfo:string;\r\n\r\n  get showLogin():boolean{\r\n\r\n    if (this.pageTitle == 'Globe'){\r\n      return false;\r\n    }\r\n   return true;\r\n  }\r\n\r\n  constructor(private router: Router, private dataService:DataService,\r\n    private loginService:LoginService) {\r\n  }\r\n\r\n  //Function to toggle sidemenu\r\n  sidebarDisplay():void{\r\n    this.sidebarStatus = !this.sidebarStatus;\r\n    this.dataService.showSideBar(this.sidebarStatus);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    //Subscribe to service that keeps tracks of each page title (updates main title variable)\r\n    this.dataService.currentPageTitle.subscribe(t=> this.pageTitle = t);\r\n\r\n    //Checks if user is logged (display different icons for login/out)\r\n    this.isLoggedin = this.loginService.isLoggedIn;\r\n\r\n    if(this.isLoggedin){\r\n      var user = this.loginService.user;\r\n      //Check if it's homepage to hide/show sidemenu\r\n      this.showMenu = true;\r\n      let state = user['state'] != null ? user['state'] : '';\r\n      let county = user['county'] != null ? user['county'] : '';\r\n      this.userInfo = '(' + county + ', ' + state + ', ' + user['country'] + ')    ';\r\n    }\r\n  }\r\n\r\n  login():void{\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  logout():void{\r\n    this.isLoggedin = false;\r\n    this.showMenu = false;\r\n    this.loginService.logout();\r\n\r\n  }\r\n\r\n}\r\n","\r\n  <mat-toolbar color=\"primary\" >\r\n    <button mat-icon-button class=\"example-icon\" (click)=\"sidebarDisplay()\" *ngIf=\"showMenu\"\r\n    title=\"Menu\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <span class=\"title-center\">{{pageTitle}}</span>\r\n\r\n\r\n    <span class=\"buttonspacer\"></span>\r\n    <div *ngIf=\"isLoggedin\" style=\"font-size: small;\">\r\n      {{userInfo}}\r\n    </div>\r\n\r\n    <div *ngIf=\"showLogin\">\r\n\r\n      <button *ngIf=\"!isLoggedin\" mat-icon-button class=\"example-icon favorite-icon\" (click)=\"login()\"\r\n      title=\"Login\">\r\n        <mat-icon>login</mat-icon>\r\n      </button>\r\n\r\n      <button *ngIf=\"isLoggedin\" mat-icon-button class=\"example-icon favorite-icon\" (click)=\"logout()\"\r\n      title=\"Logout\">\r\n        <mat-icon>power_settings_new</mat-icon>\r\n      </button>\r\n\r\n      <button mat-icon-button *ngIf=\"isLoggedin\" class=\"example-icon\" routerLink=\"settings\" title=\"Settings\" >\r\n        <mat-icon>settings</mat-icon>\r\n      </button>\r\n\r\n    </div>\r\n\r\n\r\n\r\n  </mat-toolbar>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  selectedRoute:any;\r\n\r\n  //['icon name', 'Page Title']\r\n  optionsList = [[\"dashboard\",\"Dashboard\"],[\"analytics\",\"Reports\"],[\"people\",\"Twitter Feed\"], [\"settings\",\"Account Settings\"]];\r\n\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  //Navigates to route based on selected value from mat-list and optionsList variable\r\n  goTo(selection:any){\r\n    var route;\r\n\r\n    if(selection[1] == 'Dashboard'){\r\n      route = '/dashboard';\r\n    }\r\n    if(selection[1] == 'Reports'){\r\n      route = '/reports';\r\n    }\r\n    if(selection[1] == 'Twitter Feed'){\r\n      route = '/twitter';\r\n    }\r\n    if(selection[1] == 'Account Settings'){\r\n      route = '/settings';\r\n    }\r\n\r\n    this.router.navigate([route]);\r\n  }\r\n}\r\n","\r\n<div >\r\n<body class=\"color-primary\" >\r\n\r\n    <mat-selection-list #menu [multiple]=\"false\" >\r\n      <mat-list-option *ngFor=\"let menu of optionsList\" [value]=\"menu\" style=\"top: 0;\"\r\n      (click)=\"goTo(menu)\">\r\n\r\n        <div class=\"with-icon\">\r\n\r\n            <mat-icon>{{ menu[0]}}</mat-icon>\r\n            <mat-divider></mat-divider>\r\n\r\n         <div class=\"spacing\"> <b>{{menu[1]}}</b> </div>\r\n        </div>\r\n\r\n      </mat-list-option>\r\n    </mat-selection-list >\r\n\r\n</body>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LocalStorage, LocalStorageService } from 'ngx-webstorage';\r\nimport { ILogin } from './login';\r\nimport { LoginService } from './login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  formGroup:FormGroup | undefined;\r\n  submissionMessage: string;\r\n  loader:boolean = false;\r\n\r\n  constructor(private loginService:LoginService, private router:Router, private localSt:LocalStorageService){\r\n\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm(){\r\n    this.formGroup = new FormGroup({\r\n      userName: new FormControl(\"\", [Validators.required, Validators.minLength(5)]),\r\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(6)])\r\n    })\r\n  }\r\n\r\n  loginProcess(){\r\n\r\n    this.loader = true; //show progress bar\r\n\r\n    if(this.formGroup?.valid){\r\n      this.loginService.loginHandler(this.formGroup.value).subscribe(data=>{\r\n\r\n        if(data.status == 201){\r\n          this.loginService.user = data['body'].user;\r\n\r\n          this.localSt.store('token', data['body'].token);\r\n\r\n          this.loginService.isLoggedIn = true;\r\n          this.submissionMessage = '';\r\n          this.router.navigate(['/dashboard']);\r\n\r\n        }\r\n\r\n      }, err=> {\r\n\r\n        this.loader = false; //show progress bar\r\n        if(err.status == 401){\r\n          this.submissionMessage = \"Username or Password is incorrect\";\r\n        }\r\n\r\n        else if(err.status == 429){\r\n          this.submissionMessage = \"Error! Try again later\";\r\n        }\r\n        else{\r\n          this.submissionMessage = \"An error occurred! Try Again...\";\r\n        }\r\n\r\n      }\r\n\r\n        );\r\n    }\r\n  }\r\n\r\n  registration():void{\r\n    this.router.navigate(['/registration']);\r\n  }\r\n\r\n  home():void{\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"verticalalign\">\r\n<div fxLayoutAlign=\"center\" fxFlexFill class=\"main-div\">\r\n  <mat-card fxFlex=\"25\">\r\n\r\n      <mat-toolbar color=\"primary\" fxLayoutAlign=\"center center\">Login Page</mat-toolbar>\r\n      <form fxLayoutAlign=\"stretch\" fxLayout=\"column\" class=\"login-form\" [formGroup]=\"formGroup\" (ngSubmit) =\"loginProcess()\">\r\n          <mat-form-field>\r\n            <mat-label fxLayoutAlign=\"center center\">Username</mat-label>\r\n            <input matInput placeholder=\"Username\" formControlName=\"userName\">\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n              <mat-label fxLayoutAlign=\"center center\">Password</mat-label>\r\n              <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\">\r\n            </mat-form-field>\r\n\r\n            <button mat-raised-button class=\"btn btn-success\" type=\"submit\">Login</button>\r\n            <br>\r\n            <div fxLayoutAlign=\"center\" style=\"color: red;\">\r\n              {{submissionMessage}}\r\n            </div>\r\n\r\n\r\n            <mat-list>\r\n              <div *ngIf=\"loader\">\r\n                <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n              </div>\r\n              <mat-divider></mat-divider>\r\n              <br>\r\n            </mat-list>\r\n            <br>\r\n            <div class=\"verticalalign\">\r\n              <div fxLayoutAlign=\"center\" fxFlexFill class=\"main-div\">\r\n\r\n                <button mat-raised-button  (click)=\"registration()\">New Account</button>\r\n                <span style=\"margin-left: 4em;\"></span>\r\n                <button mat-raised-button  (click)=\"home()\">Return to Home Page</button>\r\n              </div>\r\n            </div>\r\n\r\n        </form>\r\n\r\n  </mat-card>\r\n\r\n\r\n</div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders  } from '@angular/common/http';\r\n//import { baseUrl, baseTestingUrl } from './../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService } from 'ngx-webstorage';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\ntoken:string;\r\nisLoggedIn:boolean;\r\nheaders:HttpHeaders;\r\nuser:any;\r\nbaseUrl = 'https://jesualdocc.pythonanywhere.com';\r\n\r\n  constructor(private http:HttpClient, private localStorage:LocalStorageService,\r\n     private router:Router) {\r\n  }\r\n\r\n  loginHandler(data:any):Observable<any>{\r\n\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const\r\n    }\r\n    return this.http.post<any>(this.baseUrl +'/login', data, httpOptions);\r\n  }\r\n\r\n  getToken():string{\r\n\r\n    this.token = this.localStorage.retrieve('token');\r\n\r\n    if(this.token == null || this.token == \"\" || this.token == undefined){\r\n      this.logout();\r\n      return \"\";\r\n    }\r\n\r\n    return this.token;\r\n  }\r\n\r\n  logout(){\r\n    this.isLoggedIn = false;\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n  isAuthenticated():boolean{\r\n    return this.isLoggedIn;\r\n  }\r\n\r\n  deleteTokenData(){\r\n    this.localStorage.clear('token');\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","export class Users{\r\n  id:number;\r\n  firstName:string;\r\n  lastName:string;\r\n  userName:string;\r\n  password:string;\r\n  country:string;\r\n  state:string;\r\n  county:string;\r\n  days:number;\r\n}\r\n","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {Users} from './Users';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  countries:Set<string> =  new Set<string>();\r\n  states = [];\r\n  counties = [];\r\n  model = new Users();\r\n  submitted = false;\r\n  submissionMessage = '';\r\n  usernameList:string[] = [];\r\n  errorMessage = false;\r\n  checkMatch:string = \"\";\r\n  loading:boolean = false;\r\n  stateListEnable = false;\r\n  countyListEnable = false;\r\n\r\n  //Property that get checks in realtime\r\n  get passwordMatch():boolean{\r\n\r\n    return this.model.password == this.checkMatch ? true:false;\r\n\r\n  }\r\n\r\n  //Assures that county and states are selected (used along with form.valid)\r\n  get isSelected():boolean{\r\n    if(this.model.country == null || this.model.country == undefined || this.model.country == \"\"){\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  //Property that get checks in realtime\r\n  get checkUsername():string {\r\n    const uName = this.model.userName;\r\n\r\n    if(this.usernameList.includes(uName)){\r\n      const ret = 'Username:' + uName + ' is not available';\r\n      return ret;\r\n    }\r\n\r\n    return '';\r\n   }\r\n\r\n   constructor(private router: Router, private dataService:DataService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getCountries();\r\n\r\n  }\r\n\r\n  getCountries(){\r\n    this.loading = true;\r\n    this.dataService.getCountries().subscribe(data=>{\r\n      if(data.status == 200){\r\n        let result = data['body'].data;\r\n\r\n        this.countries.add('US');\r\n\r\n        for(var c of result){\r\n          this.countries.add(c[0]);\r\n        }\r\n      }\r\n    },\r\n    err=>{\r\n\r\n    },\r\n    ()=>{\r\n      this.loading = false;\r\n      this.getAllUsernames();\r\n    }\r\n    );\r\n  }\r\n\r\n  getStateProvinces(country:string){\r\n    this.loading = true;\r\n    this.states = [];\r\n    this.stateListEnable = false;\r\n    this.countyListEnable = false;\r\n\r\n    this.dataService.getStates({'country':country}).subscribe(data=>{\r\n      if(data.status == 200){\r\n        this.states = data['body'].data;\r\n        this.states.sort()\r\n      }\r\n\r\n    },err=>{},\r\n    ()=>{\r\n      this.stateListEnable = true;\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  getStateCounties(state:string){\r\n    this.loading = true;\r\n    this.counties = [];\r\n    this.countyListEnable = false;\r\n\r\n    this.dataService.getCounties({'state':state}).subscribe(data=>{\r\n      if(data.status == 200){\r\n\r\n        this.counties = data['body'].data\r\n        this.counties.sort()\r\n\r\n      }\r\n      this.countyListEnable = true;\r\n      this.loading = false;\r\n\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n\r\n    this.sendData();\r\n\r\n  }\r\n\r\n  clearForm(){\r\n    this.model = new Users();\r\n  }\r\n\r\n  cancel(){\r\n    this.router.navigate(['/home']);\r\n  }\r\n\r\n\r\n  getAllUsernames(){\r\n    this.loading = true;\r\n    this.dataService.getAllUsers().subscribe(\r\n      data=>{\r\n\r\n        if(data.status == 200){\r\n          var result = data['body'].users;\r\n\r\n          var usernames = result['userName'];\r\n\r\n            for(var i in usernames){\r\n\r\n            this.usernameList.push(usernames[i]);\r\n            }\r\n        }\r\n      }, err=>{\r\n\r\n      },\r\n      ()=>{\r\n        this.loading = false;\r\n\r\n      });\r\n  }\r\n\r\n  sendData(){\r\n\r\n    this.dataService.addUser(this.model).subscribe(result=>{\r\n    if(result.status == 201){\r\n      this.errorMessage = false;\r\n      this.submitted = true;\r\n      this.submissionMessage = '';\r\n      alert(\"Registration Successful\");\r\n      this.router.navigate(['/login']);\r\n    }\r\n    else{\r\n\r\n      this.submissionMessage = \"An error occurred!Try Again...\";\r\n\r\n    }\r\n    });\r\n  }\r\n\r\n}\r\n","<div  class=\"centerVH\" *ngIf=\"loading\">\r\n  <mat-spinner ></mat-spinner>\r\n</div>\r\n\r\n\r\n<div *ngIf=\"!loading\">\r\n<mat-card>\r\n  <mat-toolbar color=\"primary\" fxLayoutAlign=\"center center\">Registration</mat-toolbar>\r\n  <br>\r\n  <div class=\"container\" style=\"width:50%\">\r\n    <div [hidden]=\"submitted\">\r\n\r\n      <form (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\">\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"firstName\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\" required [(ngModel)]=\"model.firstName\" name=\"firstName\"\r\n            #fname=\"ngModel\" placeholder=\"Enter First Name\"/>\r\n\r\n          <div *ngIf=\"fname.invalid && (fname.dirty || fname.touched)\" class=\"alert alert-danger\">\r\n\r\n            <div *ngIf=\"fname.errors.required\">\r\n              First Name is required.\r\n            </div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"lastName\">Last Name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"lastName\" required [(ngModel)]=\"model.lastName\" name=\"lastName\"\r\n            #lname=\"ngModel\" placeholder=\"Enter Last Name\">\r\n\r\n          <div *ngIf=\"lname.invalid && (lname.dirty || lname.touched)\" class=\"alert alert-danger\">\r\n\r\n            <div *ngIf=\"lname.errors.required\">\r\n              Last Name is required.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"userName\">Username</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"userName\" required [(ngModel)]=\"model.userName\" name=\"userName\"\r\n            #uname=\"ngModel\" placeholder=\"Enter Username\">\r\n\r\n          <div *ngIf=\"uname.invalid && (uname.dirty || uname.touched)\" class=\"alert alert-danger\">\r\n\r\n            <div *ngIf=\"uname.errors.required\">\r\n              UserName is required.\r\n            </div>\r\n          </div>\r\n\r\n          <div *ngIf=\"uname.valid\">\r\n            {{checkUsername}}\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" required minlength=\"6\" [(ngModel)]=\"model.password\" name=\"password\"\r\n            #password=\"ngModel\" placeholder=\"Enter Password\">\r\n\r\n          <div *ngIf=\"password.invalid && password.touched\" class=\"alert alert-danger\">\r\n\r\n            <div *ngIf=\"password.errors.required\">\r\n              Password is required.\r\n            </div>\r\n\r\n            <div *ngIf=\"password.errors.minlength\">\r\n              Invalid Password: Minimum Length 6\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"confirmPassword\">Confirm Password</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"confirmPassword\" required minlength=\"6\" [(ngModel)]=\"checkMatch\" name=\"confirmPassword\"\r\n            #confirmPassword=\"ngModel\" placeholder=\"Confirm Password\">\r\n\r\n\r\n          <div *ngIf=\"confirmPassword.invalid && confirmPassword.touched\" class=\"alert alert-danger\">\r\n\r\n            <div *ngIf=\"confirmPassword.errors.required\">\r\n              Password is required.\r\n            </div>\r\n\r\n            <div *ngIf=\"confirmPassword.errors.minlength\">\r\n              Invalid Password: Minimum Length 6\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div *ngIf=\"!passwordMatch && confirmPassword.touched\" class=\"alert alert-danger\">\r\n            Password don't match\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"country\">Country</label>\r\n          <select class=\"form-control\" id=\"country\" required [(ngModel)]=\"model.country\" name=\"country\" #country=\"ngModel\"\r\n            placeholder=\"Select Country\" (change)=\"getStateProvinces(country.value)\">\r\n            <option hidden value=\"\" disabled selected>Select Country </option>>\r\n            <option *ngFor=\"let country of countries\" [value]=\"country\">{{country}}</option>\r\n          </select>\r\n\r\n          <div *ngIf=\"country.invalid && country.touched\" class=\"alert alert-danger\">\r\n\r\n            <div *ngIf=\"country.errors.required\">\r\n              Country is required.\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"state\">State</label>\r\n          <select class=\"form-control\" id=\"state\" [disabled]= \"!stateListEnable\" [(ngModel)]=\"model.state\" name=\"state\" #state=\"ngModel\"\r\n            placeholder=\"Select State\" (change)=\"getStateCounties(state.value)\">\r\n            <option hidden value=\"\" disabled selected>Select State </option>>\r\n            <option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</option>\r\n          </select>\r\n\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"county\">County</label>\r\n          <select class=\"form-control\" id=\"county\" [disabled]= \"!countyListEnable\" [(ngModel)]=\"model.county\" name=\"county\" #county=\"ngModel\"\r\n            placeholder=\"d.ff\">\r\n            <option hidden value=\"\" disabled selected>Select County </option>>\r\n            <option *ngFor=\"let county of counties\" [value]=\"county\">{{county}}</option>\r\n          </select>\r\n\r\n        </div>\r\n\r\n\r\n        <br>\r\n        <div style=\"text-align: center;\">\r\n        <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!userForm.form.valid || !passwordMatch || !isSelected\">Submit</button>\r\n        <span style=\"margin-left: 4em;\"></span>\r\n        <button type=\"button\" mat-raised-button color=\"basic\" class=\"btn btn-default\"\r\n          (click)=\"clearForm(); userForm.reset()\">Clear</button>\r\n\r\n          <span style=\"margin-left: 4em;\"></span>\r\n\r\n          <button type=\"button\" mat-raised-button class=\"btn btn-danger\"\r\n          (click)=\"clearForm(); userForm.reset(); cancel()\">Cancel</button>\r\n\r\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">\r\n          {{submissionMessage}}\r\n        </div>\r\n\r\n\r\n      </div>\r\n      </form>\r\n    </div>\r\n    <br>\r\n    <br>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { LoginService } from 'src/app/login/login.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Users } from '../registration/Users';\r\nimport { ICovidData } from '../reports/CovidData';\r\n//import { baseUrl, baseTestingUrl } from './../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n//Service to share data between unrelated components\r\nexport class DataService {\r\n\r\nlocation:any; //To share county and state for non-logged user\r\nmainRoute:string;\r\nprivate sidebar = new BehaviorSubject(false);\r\ncurrentSidebarStatus = this.sidebar.asObservable();\r\n\r\nprivate isGlobeView = new BehaviorSubject(false);\r\ncurrentView = this.isGlobeView.asObservable();\r\n\r\nprivate pageTitle = new BehaviorSubject(\"\");\r\ncurrentPageTitle = this.pageTitle.asObservable();\r\n\r\n  constructor(private http:HttpClient, private loginService:LoginService) {\r\n    this.mainRoute = 'https://jesualdocc.pythonanywhere.com';\r\n  }\r\n\r\n  showSideBar(status:boolean){\r\n    this.sidebar.next(status);\r\n  }\r\n\r\n  changeView(status:boolean){\r\n    this.isGlobeView.next(status);\r\n  }\r\n\r\n  changePageTitle(title:string){\r\n\r\n    this.pageTitle.next(title);\r\n  }\r\n\r\n  getTweets():Observable<any>{\r\n\r\n    var url = this.mainRoute + '/twitter';\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'token': this.loginService.getToken()\r\n      })\r\n    }\r\n\r\n    var user = this.loginService.user;\r\n\r\n    return this.http.post<any>(url, user, httpOptions)\r\n  }\r\n\r\n  getCounties(location:any):Observable<any>{\r\n\r\n    var url = this.mainRoute + '/counties';\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'Content-Type':'application/json'\r\n      })\r\n    }\r\n\r\n    return this.http.post(url,location, httpOptions);\r\n  }\r\n\r\n  getCountries():Observable<any>{\r\n\r\n    var url = this.mainRoute + '/countries';\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'Content-Type':'application/json'\r\n      })\r\n    }\r\n\r\n    return this.http.get(url, httpOptions);\r\n  }\r\n\r\n  getStates(country:any):Observable<any>{\r\n\r\n    var url = this.mainRoute + '/states';\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'Content-Type':'application/json'\r\n      })\r\n    }\r\n\r\n    return this.http.post(url,country, httpOptions);\r\n  }\r\n\r\n  getAllUsers():Observable<any>{\r\n\r\n    var url = this.mainRoute + '/listof';\r\n\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'Content-Type':'application/json'\r\n      })\r\n    }\r\n\r\n    return this.http.get<any>(url, httpOptions);\r\n  }\r\n\r\n\r\n\r\n  addUser(data:Users):Observable<any>{\r\n    var url = this.mainRoute + '/registration';\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'Content-Type':'application/json'\r\n      })\r\n    }\r\n\r\n    return this.http.post<any>(url, data, httpOptions);\r\n  }\r\n\r\n\r\n  updateUser(data:Users, changeType:string):Observable<any>{\r\n    var url = this.mainRoute + '/profileinfo';\r\n\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'changeType':changeType,\r\n        'token': this.loginService.getToken()\r\n      })\r\n    }\r\n    return this.http.put<any>(url, data, httpOptions);\r\n  }\r\n\r\n  getCovidData(data:Users):Observable<any>{\r\n    var url = this.mainRoute + '/data';\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'Content-Type':'application/json',\r\n        'token': this.loginService.getToken()\r\n      })\r\n    }\r\n    return this.http.post<any>(url, data, httpOptions);\r\n  }\r\n\r\n  getPredictions():Observable<any>{\r\n    var url = this.mainRoute + '/predictions';\r\n\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'token': this.loginService.getToken()\r\n      })\r\n    }\r\n\r\n    var user = this.loginService.user;\r\n\r\n    return this.http.post<any>(url, user, httpOptions)\r\n  }\r\n\r\n  getGlobeData():Observable<any>{\r\n    var url = this.mainRoute + '/globedata';\r\n\r\n    var httpOptions = {\r\n      observe : 'response' as const,\r\n      responseType:'json' as const,\r\n      headers: new HttpHeaders({\r\n        'token': this.loginService.getToken()\r\n      })\r\n    }\r\n\r\n    return this.http.get<any>(url,httpOptions)\r\n  }\r\n\r\n}\r\n","import { LoginService } from 'src/app/login/login.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteguardService implements CanActivate {\r\n\r\n  constructor(private loginService:LoginService, private router:Router) { }\r\n\r\n  canActivate():boolean {\r\n\r\n    if(!this.loginService.isAuthenticated()){\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\nexport const baseUrl = 'http://jesualdocc.pythonanywhere.com' //'http://localhost:8000'; //Server\r\nexport const baseUrlAngular = 'http://localhost:4200';\r\nexport const baseTestingUrl = 'http://localhost:8000';\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}